{"version":3,"sources":["../src/OperationExpressionBuilder.js"],"names":["OperationExpressionBuilder","type","property","rootExpression","currentExpression","propertyName","Error","array","propertyAccessExpression","_createPropertyAccessExpression","Array","isArray","constant","_getConstant","arrayExpression","children","push","lambda","propertyNavigationExpression","_createPropertyNavigationExpression","expressionBuilder","expression","expressionExpression","lambdaExpression","value","Date","_createLambdaOperationExpression","_createOperationExpression","_createArrayOperationExpression","propertyNavigation"],"mappings":"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","file":"OperationExpressionBuilder.js","sourcesContent":["import ValueExpression from \"./ValueExpression\";\nimport OperationExpression from \"./OperationExpression\";\nimport Expression from \"./Expression\";\nimport ExpressionBuilder from \"./ExpressionBuilder\";\n\nexport default class OperationExpressionBuilder {\n    constructor(type, property, rootExpression, currentExpression) {\n        this.type = type;\n        this.propertyName = property;\n        this.rootExpression = rootExpression;\n        this.currentExpression = currentExpression || rootExpression;\n\n        if (type == null) {\n            throw new Error(\"Null Argument Exception: type cannot be null.\");\n        }\n\n        if (rootExpression == null) {\n            throw new Error(\"Null Argement Exception: rootExpression cannot be null.\");\n        }\n    }\n\n    _createArrayOperationExpression(type, array) {\n        let propertyAccessExpression = this._createPropertyAccessExpression();\n\n        if (Array.isArray(array)) {\n            let constant = this._getConstant(array);\n            let arrayExpression = new OperationExpression(type);\n            arrayExpression.children.push(propertyAccessExpression, constant);\n\n            this.currentExpression.children.push(arrayExpression);\n            return this.rootExpression;\n        } else {\n            throw new Error(\"Invalid Argument: Expected an array.\");\n        }\n    }\n\n    _createLambdaOperationExpression(type, lambda) {\n        if (typeof lambda !== \"function\") {\n            throw new Error(\"Invalid Argument: Expected a function.\");\n        }\n\n        let propertyNavigationExpression = this._createPropertyNavigationExpression();\n\n        let expressionBuilder = new ExpressionBuilder();\n        let expression = lambda(expressionBuilder);\n        let expressionExpression = new OperationExpression(\"expression\");\n\n        expressionExpression.children.push(expression);\n\n        let lambdaExpression = new OperationExpression(type);\n        lambdaExpression.children.push(\n            propertyNavigationExpression,\n            expressionExpression\n        );\n\n        this.currentExpression.children.push(lambdaExpression);\n\n        return this.rootExpression;\n    }\n\n    _createOperationExpression(type, value) {\n        let propertyAccessExpression = this._createPropertyAccessExpression();\n\n        let constant = this._getConstant(value);\n        let expression = new OperationExpression(type);\n        expression.children.push(propertyAccessExpression, constant);\n\n        this.currentExpression.children.push(expression);\n\n        return this.rootExpression;\n    }\n\n    _createPropertyAccessExpression() {\n        let propertyAccessExpression = new OperationExpression(\"propertyAccess\");\n        propertyAccessExpression.children.push(\n            new ValueExpression(\"type\", this.type),\n            new ValueExpression(\"property\", this.propertyName)\n        );\n\n        return propertyAccessExpression;\n    }\n\n    _createPropertyNavigationExpression() {\n        let propertyNavigationExpression = new OperationExpression(\"propertyNavigation\");\n        propertyNavigationExpression.children.push(\n            new ValueExpression(\"type\", this.type),\n            new ValueExpression(\"property\", this.propertyName)\n        );\n\n        return propertyNavigationExpression;\n    }\n\n    _getConstant(value) {\n        if (value instanceof Expression) {\n            return value;\n        }\n\n        if (typeof value === \"string\") {\n            return new ValueExpression(\"string\", value);\n        } else if (typeof value === \"function\") {\n            return new ValueExpression(\"function\", value);\n        } else if (typeof value === \"number\") {\n            return new ValueExpression(\"number\", value);\n        } else if (typeof value === \"boolean\") {\n            return new ValueExpression(\"boolean\", value);\n        } else if (value === null) {\n            return new ValueExpression(\"null\", value);\n        } else if (Array.isArray(value)) {\n            return new ValueExpression(\"array\", value);\n        } else if (value instanceof Date) {\n            return new ValueExpression(\"date\", value);\n        } else {\n            return new ValueExpression(\"object\", value);\n        }\n    }\n\n    any(lambda) {\n        return this._createLambdaOperationExpression(\"any\", lambda);\n    }\n\n    all(lambda) {\n        return this._createLambdaOperationExpression(\"all\", lambda);\n    }\n\n    contains(value) {\n        return this._createOperationExpression(\"contains\", value);\n    }\n\n    isEqualTo(value) {\n        return this._createOperationExpression(\"isEqualTo\", value);\n    }\n\n    isNotEqualTo(value) {\n        return this._createOperationExpression(\"isNotEqualTo\", value);\n    }\n\n    isIn(array) {\n        return this._createArrayOperationExpression(\"isIn\", array);\n    }\n\n    isNotIn(array) {\n        return this._createArrayOperationExpression(\"isNotIn\", array);\n    }\n\n    isGreaterThan(value) {\n        return this._createOperationExpression(\"isGreaterThan\", value);\n    }\n\n    isGreaterThanOrEqualTo(value) {\n        return this._createOperationExpression(\"isGreaterThanOrEqualTo\", value);\n    }\n\n    isLessThanOrEqualTo(value) {\n        return this._createOperationExpression(\"isLessThanOrEqualTo\", value);\n    }\n\n    isLessThan(value) {\n        return this._createOperationExpression(\"isLessThan\", value);\n    }\n\n    endsWith(value) {\n        return this._createOperationExpression(\"endsWith\", value);\n    }\n\n    startsWith(value) {\n        return this._createOperationExpression(\"startsWith\", value);\n    }\n\n    property(value) {\n        let propertyNavigation = this._createPropertyNavigationExpression();\n        this.currentExpression.children.push(propertyNavigation);\n        return new OperationExpressionBuilder(\"Object\", value, this.rootExpression, propertyNavigation);\n    }\n\n    getExpression() {\n        let propertyAccessExpression = this._createPropertyAccessExpression();\n        this.currentExpression.children.push(propertyAccessExpression);\n\n        return this.rootExpression;\n    }\n}"]}