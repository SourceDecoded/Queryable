{"version":3,"sources":["../src/Queryable.js"],"names":["Queryable","type","query","provider","parameters","_applyQuery","where","nodeName","skip","take","Infinity","orderBy","select","Error","copy","JSON","parse","stringify","lambda","_copyQuery","getQuery","whereExpression","children","length","rightExpression","leftExpression","pop","expression","push","value","propertyExpression","getExpression","contains","name","isNaN","parseInt","charAt","properties","hasValidMapping","every","property","_validatePropertyName","existingMapping","forEach","mapping","mappingKeys","Object","keys","key","_createQueryableFromLambda","queryable","_assertHasProvider","countAsync","cloneQuery","andExpression","_createQueryableFromOrderBy","_createQueryableFromNumber","toArrayAsync","toArrayWithCountAsync","params","Array","isArray","_selectArray","_selectObject"],"mappings":"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","file":"Queryable.js","sourcesContent":["import Expression from \"./Expression\";\nimport ExpressionBuilder from \"./ExpressionBuilder\";\nimport OperationExpression from \"./OperationExpression\";\nimport OperationExpressionBuilder from \"./OperationExpressionBuilder\";\nimport ValueExpression from \"./ValueExpression\";\n\nexport default class Queryable {\n    constructor(type, query = {}) {\n        this.type = type || \"Object\";\n        this.provider = null;\n        this.query = query;\n        this.query.parameters = (query && query.parameters) || {};\n        this._applyQuery(query);\n    }\n\n    _applyQuery(query) {\n        if (query.where != null && query.where.nodeName === \"where\") {\n            this.query.where = query.where;\n        } else {\n            this.query.where = new OperationExpression(\"where\");\n        }\n\n        if (query.skip != null && query.skip.nodeName === \"skip\") {\n            this.query.skip = query.skip;\n        } else {\n            this.query.skip = new ValueExpression(\"skip\", 0);\n        }\n\n        if (query.take != null && query.take.nodeName === \"take\") {\n            this.query.take = query.take;\n        } else {\n            this.query.take = new ValueExpression(\"take\", Infinity);\n        }\n\n        if (query.orderBy != null && query.orderBy.nodeName === \"orderBy\") {\n            this.query.orderBy = query.orderBy;\n        } else {\n            this.query.orderBy = new OperationExpression(\"orderBy\");\n        }\n\n        if (query.select != null && query.select.nodeName === \"select\") {\n            this.query.select = query.select;\n        } else {\n            this.query.select = new ValueExpression(\"select\", {});\n        }\n\n    }\n\n    _assertHasProvider() {\n        if (!this.provider) {\n            throw new Error(\"No provider found.\");\n        }\n    }\n\n    _copyQuery(query) {\n        let copy = {};\n\n        copy.where = query.where.copy();\n        copy.orderBy = query.orderBy.copy();\n        copy.select = query.select.copy();\n        copy.take = query.take.copy();\n        copy.skip = query.skip.copy();\n\n        copy.parameters = JSON.parse(JSON.stringify(query.parameters));\n\n        return copy;\n    }\n\n    _createQueryableFromLambda(type, lambda = () => { }) {\n        let query = this._copyQuery(this.getQuery());\n        let whereExpression;\n\n        if (typeof lambda === \"function\") {\n            whereExpression = lambda(new ExpressionBuilder(this.type));\n        } else if (lambda instanceof Expression) {\n            whereExpression = lambda;\n        } else {\n            throw new Error(\"Invalid Argument: Expected an expression, or function.\");\n        }\n\n        if (!(whereExpression instanceof Expression)) {\n            throw new Error(\"Invalid expression: You may be missing a return.\");\n        }\n\n        if (query.where.children.length === 0) {\n            query.where = whereExpression;\n        } else {\n\n            let rightExpression = whereExpression.children[0];\n            let leftExpression = query.where.children.pop();\n            let expression = new OperationExpression(type);\n\n            expression.children.push(\n                leftExpression,\n                rightExpression\n            );\n\n            query.where.children.push(expression);\n        }\n\n        return this.copy(query);\n    }\n\n    _createQueryableFromNumber(type, value) {\n        if (typeof value !== \"number\") {\n            throw new Error(\"Invalid Argument: Expected a number.\");\n        }\n\n        let query = this._copyQuery(this.getQuery());\n        query[type] = new ValueExpression(type, value);\n\n        return this.copy(query);\n    }\n\n    _createQueryableFromOrderBy(type, lambda = () => { }) {\n        let whereExpression;\n        let propertyExpression;\n        let query = this._copyQuery(this.getQuery());\n\n        if (typeof lambda === \"function\") {\n            whereExpression = lambda(new ExpressionBuilder(this.type)).getExpression();\n        } else if (lambda instanceof OperationExpressionBuilder) {\n            whereExpression = lambda.getExpression();\n        } else {\n            throw new Error(\"Invalid Argument: Expected a OperationExpressionBuilder, or a function.\");\n        }\n\n        if (!(whereExpression instanceof Expression)) {\n            throw new Error(\"Invalid expression: You may be missing a return.\");\n        }\n\n        let expression = new OperationExpression(type);\n        propertyExpression = whereExpression.children[0];\n        expression.children.push(propertyExpression);\n\n        if (!query.orderBy.contains(propertyExpression)) {\n            query.orderBy.children.push(expression);\n            return this.copy(query);\n        } else {\n            return this;\n        }\n    }\n\n    _validatePropertyName(name) {\n        return typeof name === \"string\" && name.length > 0 && isNaN(parseInt(name.charAt(0), 10))\n    }\n\n    _selectArray(properties) {\n        let hasValidMapping = properties.every((property) => {\n            return this._validatePropertyName(property);\n        });\n\n        if (!hasValidMapping) {\n            throw new Error(\"Invalid mapping: The mappings need to be a string that is at least one character long and doesn't start with a number.\");\n        }\n\n        let query = this._copyQuery(this.getQuery());\n        let existingMapping = query.select.value;\n\n        properties.forEach((property) => {\n            existingMapping[property] = property;\n        });\n\n        return this.copy(query);\n    }\n\n    _selectObject(mapping) {\n        let mappingKeys = Object.keys(mapping);\n        let hasValidMapping = mappingKeys.every((key) => {\n            return this._validatePropertyName(key) && this._validatePropertyName(mapping[key]);\n        });\n\n        if (!hasValidMapping) {\n            throw new Error(\"Invalid mapping: The mappings need to be a string that is at least one character long and doesn't start with a number.\");\n        }\n\n        let query = this._copyQuery(this.getQuery());\n        let existingMapping = query.select.value;\n\n        mappingKeys.forEach((key) => {\n            existingMapping[key] = mapping[key];\n        });\n\n        return this.copy(query);\n    }\n\n    and(lambda) {\n        return this._createQueryableFromLambda(\"and\", lambda);\n    }\n\n    copy(query) {\n        let queryable = new Queryable(this.type, query || this._copyQuery(this.query));\n        queryable.provider = this.provider;\n        return queryable;\n    }\n\n    countAsync() {\n        this._assertHasProvider(this);\n        return this.provider.countAsync(this);\n    }\n\n    getExpression() {\n        return this.query;\n    }\n\n    getQuery() {\n        return this.query;\n    }\n\n    merge(queryable) {\n        if (!(queryable instanceof Queryable)) {\n            throw new Error(\"Expected a queryable to be passed in.\");\n        }\n\n        let cloneQuery = this._copyQuery(this.getQuery());\n        let query = queryable.getQuery();\n\n        let rightExpression = query.where.children[0];\n\n        if (rightExpression != null) {\n            // No need to copy if there is nothing to copy.\n            if (cloneQuery.where.children.length === 0) {\n                cloneQuery.where.children.push(rightExpression.copy());\n            } else if (cloneQuery.where.children.length === 1 && cloneQuery.where.children[0].nodeName === \"and\") {\n                cloneQuery.where.children[0].children.push(rightExpression.copy());\n            } else {\n                let leftExpression = cloneQuery.where.children.pop();\n                let andExpression = new OperationExpression(\"and\");\n\n                andExpression.children.push(\n                    leftExpression,\n                    rightExpression.copy()\n                );\n\n                cloneQuery.where.children.push(andExpression);\n            }\n        }\n\n        Object.keys(query.select.value).forEach((key) => {\n            cloneQuery.select.value[key] = query.select.value[key];\n        });\n\n        query.orderBy.children.forEach(function (expression) {\n            if (!cloneQuery.orderBy.contains(expression)) {\n                cloneQuery.orderBy.children.push(expression.copy());\n            }\n        });\n\n        return this.copy(cloneQuery);\n    }\n\n    or(lambda) {\n        return this._createQueryableFromLambda(\"or\", lambda);\n    }\n\n    orderBy(lambda) {\n        return this._createQueryableFromOrderBy(\"ascending\", lambda);\n    }\n\n    orderBy(lambda) {\n        return this._createQueryableFromOrderBy(\"ascending\", lambda);\n    }\n\n    orderByDesc(lambda) {\n        return this._createQueryableFromOrderBy(\"descending\", lambda);\n    }\n\n    take(value) {\n        return this._createQueryableFromNumber(\"take\", value);\n    }\n\n    toArrayAsync() {\n        this._assertHasProvider(this);\n        return this.provider.toArrayAsync(this);\n    }\n\n    toArrayWithCountAsync() {\n        this._assertHasProvider(this);\n        return this.provider.toArrayWithCountAsync(this);\n    }\n\n    setParameters(params) {\n        if (params == null) {\n            throw new Error(\"Null Argument Exception.\");\n        }\n        let parameters = this.query.parameters;\n\n        Object.keys(params).forEach(function (key) {\n            parameters[key] = params[key];\n        });\n        return this;\n    }\n\n    select(mapping) {\n        if (Array.isArray(mapping)) {\n            return this._selectArray(mapping)\n        } else {\n            return this._selectObject(mapping);\n        }\n    }\n\n    skip(value) {\n        return this._createQueryableFromNumber(\"skip\", value);\n    }\n\n    where(lambda) {\n        return this._createQueryableFromLambda(\"and\", lambda);\n    }\n\n    withParameters(params) {\n        if (params == null) {\n            throw new Error(\"Null ArgumentException\");\n        }\n\n        let parameters = (this.query.parameters = {});\n        Object.keys(params).forEach(function (key) {\n            parameters[key] = params[key];\n        });\n        return this;\n    }\n\n}\n"]}